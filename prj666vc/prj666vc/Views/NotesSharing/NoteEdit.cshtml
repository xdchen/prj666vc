@model prj666vc.ViewModels.NoteBase

@{
    ViewBag.Title = "NoteEdit";
}

<h2>NoteEdit</h2>

@using (Html.BeginForm("NoteEdit", "NotesSharing", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>NoteBase</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CourseCode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CourseCode)
            @Html.ValidationMessageFor(model => model.CourseCode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreatedDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CreatedDate)
            @Html.ValidationMessageFor(model => model.CreatedDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContentType)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContentType)
            @Html.ValidationMessageFor(model => model.ContentType)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PostOwner)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PostOwner)
            @Html.ValidationMessageFor(model => model.PostOwner)
        </div>

        
        <div>
           
        @if( Model.FileName != null)
         {
            <div class="editor-label">
            @Html.LabelFor(model => model.FileName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FileName)
            @Html.ValidationMessageFor(model => model.FileName)
        </div>
            @Html.ActionLink("Remove", "RemoveNoteFile", new { id= Model.Id, @onclick="return Submit();" }, null)
            
         }
         else
         {
            <div>
            <ol>
            <li>
            <input type="file" id="fileToUpload" name="file" />
            </li>
            </ol>
            </div>
        }

            
        </div>        
        

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "ViewMyNotes")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
